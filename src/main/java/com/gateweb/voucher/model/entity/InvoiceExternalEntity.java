/*
 * $Header: $
 * This java source file is generated by pkliu on Mon Oct 30 14:37:48 CST 2017
 * For more information, please contact pkliu@sysfoundry.com
 */
package com.gateweb.voucher.model.entity;

import com.gateweb.voucher.model.VoucherCore;
import com.gateweb.voucher.utils.voucher.VoucherLogic;
import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.apache.commons.lang3.StringUtils;

@Entity
@Table(name = "invoice_external")
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class InvoiceExternalEntity implements Serializable {

  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  private Long externalId;

  private String invoiceNumber;
  private String commonNumber;
  private String typeCode;
  private Integer invoiceStatus;
  private String invoiceDate;
  private String buyer;
  private String buyerName;
  private String seller;
  private String sellerName;
  private String sendDate;
  private BigDecimal salesAmount;
  private BigDecimal taxAmount;
  private BigDecimal totalAmount;
  private String taxType;
  private BigDecimal zeroTaxSalesAmount;
  private BigDecimal freeTaxSalesAmount;
  private String deductionCode;
  private String consolidationMark;
  private Integer consolidationQuantity;
  private String customsClearanceMark;
  private String currency;
  private String zeroTaxMark;
  private Integer creatorId;
  private LocalDateTime createDate;
  private Integer modifierId;
  private LocalDateTime modifyDate;
  private String outputDate;
  private String yearMonth;
  private String deprecated;
  private Float taxRate;
  private String originalYearMonth;
  private String source;
  private String businessUnit;
  private String relatedNumber;
  private String uid;
  private String checkRepeatKey;
  private String owner;
  private Long logId;
  private String logIdHistory;

  public static InvoiceExternalEntity fromCore(VoucherCore v) {
    return InvoiceExternalEntity.builder()
        .checkRepeatKey(v.getKey())
        .owner(v.getOwner())
        .yearMonth(v.getFilingYearMonth())
        .originalYearMonth(v.getVoucherYearMonth())
        .invoiceDate(VoucherLogic.parseDate(v.getVoucherDate()))
        .invoiceNumber(v.getInvoiceNumber())
        .commonNumber(v.getCommonNumber())
        .typeCode(v.getTypeCode())
        .invoiceStatus(VoucherLogic.parseStatus(v.getStatus()))
        .buyer(v.getBuyer())
        .buyerName(v.getBuyerName())
        .seller(v.getSeller())
        .sellerName(v.getSellerName())
        .taxType(VoucherLogic.parseTaxType(v.getTaxType()))
        .taxRate(Float.parseFloat(v.getTaxRate()))
        .salesAmount(new BigDecimal(v.getSalesAmount()))
        .taxAmount(new BigDecimal(v.getTaxAmount()))
        .zeroTaxSalesAmount(new BigDecimal(v.getZeroTaxSalesAmount()))
        .freeTaxSalesAmount(new BigDecimal(v.getFreeTaxSalesAmount()))
        .totalAmount(new BigDecimal(v.getTotalAmount()))
        .deductionCode(VoucherLogic.parseDeductionCode(v.getDeductionCode()))
        .consolidationMark(v.getConsolidationMark())
        .consolidationQuantity(
            Integer.parseInt(StringUtils.defaultIfBlank(v.getConsolidationQuantity(), "0")))
        .currency(v.getCurrency())
        .customsClearanceMark(v.getCustomsClearanceMark())
        .zeroTaxMark(StringUtils.defaultIfBlank(v.getZeroTaxMark(), ""))
        .outputDate(VoucherLogic.parseDate(v.getOutputDate()))
        .creatorId(v.getCreatorId())
        .createDate(LocalDateTime.now())
        .modifierId(v.getModifierId())
        .modifyDate(LocalDateTime.now())
        .logId(v.getLogId())
        .logIdHistory(String.valueOf(v.getLogId())) // default , 後面補上
        .uid(v.getUid())
        .source(v.getRemark1())
        .businessUnit(v.getRemark2())
        .relatedNumber(v.getRemark3())
        .deprecated("N")
        .build();
  }
}
